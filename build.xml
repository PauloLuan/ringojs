<?xml version="1.0"?>

<project name="RingoJS" default="usage" basedir=".">

    <target name="usage">
        <echo message=""/>
        <echo message="RingoJS build targets"/>
        <echo message=""/>
        <echo message=" update     --> retrieve dependencies"/>
        <echo message=" compile    --> compiles the source code to ./build/classes"/>
        <echo message=" jar        --> generates the ./lib/ringo.jar file"/>
        <echo message=" test       --> run JUnit and RingoJS tests"/>
        <echo message=" docs       --> generates the API docs"/>
        <echo message=" package    --> creates RingoJS distribution"/>
        <echo message=" dpkg       --> creates RingoJS debian package"/>
        <echo message=" clean      --> clean up compiled resources"/>
    </target>

    <!-- =================================================================== -->
    <!-- Initializes some variables                                          -->
    <!-- =================================================================== -->
    <target name="init">
        <property name="project" value="ringojs"/>
        <property name="version" value="0.9"/>

        <property name="home" value="."/>

        <property name="src" value="${home}/src"/>
        <property name="lib" value="${home}/lib"/>
        <property name="build" value="${home}/build"/>
        <property name="classes" value="${build}/classes"/>
        <property name="docs" value="${home}/docs"/>
        <property name="jsdocs" value="${home}/docs/modules"/>
        <property name="javadocs" value="${home}/docs/java"/>

        <property name="ringo-core.jar" value="${lib}/ringo-core.jar"/>
        <property name="ringo-modules.jar" value="${lib}/ringo-modules.jar"/>

        <property name="debug" value="on"/>
        <property name="optimize" value="on"/>
        <property name="deprecation" value="on"/>

        <property name="testclasses" value=""/>

        <path id="classpath">
            <fileset dir="lib">
                <include name="**/*.jar"/>
                <exclude name="${ringo-core.jar}"/>
            </fileset>
            <pathelement location="${classes}"/>
        </path>
    </target>

    <!-- =================================================================== -->
    <!-- Fetches dependencies                                                -->
    <!-- =================================================================== -->
    <target name="update">

        <get dest="./lib/ext" usetimestamp="true" skipexisting="true">
            <url url="https://oss.sonatype.org/service/local/repositories/snapshots/content/org/mozilla/rhino/1.7R5-SNAPSHOT/rhino-1.7R5-20120629.144839-4.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/jetty-releases/content/org/eclipse/jetty/jetty-server/7.5.4.v20111024/jetty-server-7.5.4.v20111024.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/jetty-releases/content/org/eclipse/jetty/jetty-servlet/7.5.4.v20111024/jetty-servlet-7.5.4.v20111024.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/jetty-releases/content/org/eclipse/jetty/jetty-continuation/7.5.4.v20111024/jetty-continuation-7.5.4.v20111024.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/central/content/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/jetty-releases/content/org/eclipse/jetty/jetty-http/7.5.4.v20111024/jetty-http-7.5.4.v20111024.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/jetty-releases/content/org/eclipse/jetty/jetty-io/7.5.4.v20111024/jetty-io-7.5.4.v20111024.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/jetty-releases/content/org/eclipse/jetty/jetty-util/7.5.4.v20111024/jetty-util-7.5.4.v20111024.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/jetty-releases/content/org/eclipse/jetty/jetty-jmx/7.5.4.v20111024/jetty-jmx-7.5.4.v20111024.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/jetty-releases/content/org/eclipse/jetty/jetty-security/7.5.4.v20111024/jetty-security-7.5.4.v20111024.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/jetty-releases/content/org/eclipse/jetty/jetty-websocket/7.5.4.v20111024/jetty-websocket-7.5.4.v20111024.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/jetty-releases/content/org/eclipse/jetty/jetty-xml/7.5.4.v20111024/jetty-xml-7.5.4.v20111024.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/releases/content/org/slf4j/slf4j-api/1.6.6/slf4j-api-1.6.6.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/releases/content/org/slf4j/slf4j-log4j12/1.6.6/slf4j-log4j12-1.6.6.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/central/content/log4j/log4j/1.2.14/log4j-1.2.14.jar"/>
            <url url="http://repository.codehaus.org/org/jruby/extras/jaffl/0.5.12/jaffl-0.5.12.jar"/>
            <url url="http://repo1.maven.org/maven2/org/jruby/extras/jffi/1.0.10/jffi-1.0.10.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/central/content/asm/asm/3.2/asm-3.2.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/central/content/asm/asm-commons/3.2/asm-commons-3.2.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/central/content/asm/asm-tree/3.2/asm-tree-3.2.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/central/content/org/jruby/extras/jnr-x86asm/1.0.0/jnr-x86asm-1.0.0.jar"/>
            <url url="http://repo1.maven.org/maven2/org/jruby/ext/posix/jnr-posix/1.1.9/jnr-posix-1.1.9.jar"/>
            <url url="http://repo1.maven.org/maven2/org/jruby/extras/constantine/0.7/constantine-0.7.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/central/content/junit/junit/3.8.2/junit-3.8.2.jar"/>
            <url url="https://oss.sonatype.org/service/local/repositories/releases/content/jline/jline/1.0/jline-1.0.jar"/>
        </get>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles the source directory                                       -->
    <!-- =================================================================== -->
    <target name="compile" depends="init, update">
        <mkdir dir="${classes}"/>
        <javac srcdir="${src}"
            source="1.5"
            target="1.5"
            destdir="${classes}"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}"
            includeAntRuntime="false">
                <compilerarg value="-Xlint:unchecked"/>
                <classpath refid="classpath"/>
                <!-- fix for openjdk rhino bootclasspath bug -->
                <compilerarg value="-Xbootclasspath/p:${lib}/js.jar"/>
        </javac>
    </target>

    <!-- =================================================================== -->
    <!-- Runs the JUnit and RingoJS test cases                               -->
    <!-- =================================================================== -->
    <target name="test" depends="jar">
        <java jar="run.jar" fork="true" failonerror="yes">
            <arg value="test/all.js"/>
        </java>
        <junit haltonfailure="true">
            <classpath refid="classpath"/>
            <formatter type="brief" usefile="false"/>
            <batchtest>
              <fileset dir="${src}">
                <include name="**/*Test*.java"/>
                <exclude name="**/AllTests.java"/>
              </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- =================================================================== -->
    <!-- Creates a jar file in the lib-directory                             -->
    <!-- =================================================================== -->
    <target name="jar" depends="compile">
        <jar jarfile="${ringo-core.jar}">
            <fileset dir="${classes}"/>
            <fileset dir="${src}" excludes="**/*.java,**/package.html"/>
        </jar>
        <jar jarfile="${ringo-modules.jar}">
            <fileset dir="${home}" includes="modules/**"/>
        </jar>
        <jar jarfile="run.jar"
            basedir="${classes}"
            includes="**/tools/launcher/**"
            manifest="${src}/org/ringojs/tools/launcher/manifest.txt"/>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the API documentation                                       -->
    <!-- =================================================================== -->
    <target name="docs" depends="jar">
        <mkdir dir="${javadocs}"/>
        <javadoc packagenames="org.ringojs.*"
            destdir="${javadocs}"
            windowtitle="RingoJS Java API"
            doctitle="RingoJS Java API">
            <fileset dir="${src}" includes="**/*.java" />
            <classpath refid="classpath"/>
       </javadoc>
       <delete dir="${jsdocs}"/>
       <java jar="run.jar" fork="true">
           <arg value="${home}/tools/jsdoc/main.js"/>
           <arg  value="--file-urls"/>
           <arg  value="--source=${home}/modules"/>
           <arg  value="--directory=${jsdocs}"/>
           <arg  value="--name=Ringo Modules"/>
       </java>
    </target>

    <!-- =================================================================== -->
    <!-- Create zipped files for distribution                                -->
    <!-- =================================================================== -->
    <target name="package" depends="jar,docs,test">
        <zip zipfile="../${project}-${version}.zip">
            <zipfileset dir="${home}" prefix="${project}-${version}"
             excludes="build/**,*.zip,*.o,*.tar,*.tar.gz,.*/**" />
        </zip>
        <tar tarfile="../${project}-${version}.tar">
            <tarfileset dir="${home}" prefix="${project}-${version}"
             filemode="755" includes="bin/ringo,bin/ringo-admin,bin/ringo-web,bin/narwhal" />
            <tarfileset dir="${home}" prefix="${project}-${version}"
             excludes="bin/ringo,bin/ringo-admin,bin/ringo-web,bin/narwhal,build/**,*.zip,*.o,*.tar,*.tar.gz,.*/**" />
        </tar>
        <gzip src="../${project}-${version}.tar" destfile="../${project}-${version}.tar.gz"/>
        <delete file="../${project}-${version}.tar"/>
    </target>

    <!-- =================================================================== -->
    <!-- Create a debian package                                             -->
    <!-- =================================================================== -->
    <target name="dpkg">
        <exec executable="dpkg-buildpackage">
            <arg value="-rfakeroot"/>
            <arg value="-b"/>
        </exec>
        <exec executable="dh_clean">
            <arg value="debian/stamp-ant-build"/>
        </exec>
    </target>

    <!-- =================================================================== -->
    <!-- Clean up compiled resources                                         -->
    <!-- =================================================================== -->
    <target name="clean" depends="init">
        <delete dir="${build}"/>
        <delete file="${ringo-core.jar}"/>
        <delete file="${ringo-modules.jar}"/>
        <delete file="run.jar"/>
        <!-- transitional: delete old ringo.jar file -->
        <delete file="lib/ringo.jar"/>
    </target>


</project>
